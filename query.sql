/**storico prenotazioni di un cliente e verifica validità di un biglietto*/
CREATE OR REPLACE VIEW W_PERCORSI_TARIFFE_CLASSE AS
SELECT PTC.KID AS ID_PERCORSO_TARIFFA_CLASSE,
	   P.KID AS ID_PERCORSO,
	   P.DESCRIZIONE AS PERCORSO,
       T.KID AS ID_TARIFFA,
       T.DESCRIZIONE AS TARIFFA,
       T.ETA_MAX AS ETA_MAX_TARIFFA,
       T.ETA_MIN AS ETA_MIN_TARIFFA,
       C.KID AS ID_CLASSE,
       C.DESCRIZIONE AS CLASSE,
	   PTC.IMPORTO
FROM PERCORSO_TARIFFA_CLASSE PTC
INNER JOIN PERCORSI P ON P.KID = PTC.ID_PERCORSO
INNER JOIN TARIFFA T ON T.KID = PTC.ID_TARIFFA
INNER JOIN CLASSE C ON C.KID = PTC.ID_CLASSE;

/**Lista dei biglietti con le informazioni del passeggero, treno, tariffa, classe e importo*/
SELECT B.KID,
	   P.KID AS ID_PASSEGGERO,
       P.NOME,
       P.COGNOME,
       P.CODICE_FISCALE,
       DATE_FORMAT(STR_TO_DATE(P.DATA_NASCITA, '%Y%m%d'), '%d/%m/%Y') AS DATA_NASCITA,
       P.EMAIL,
	   B.POSTO,
       DATE_FORMAT(STR_TO_DATE(B.DATA_BIGLIETTO, '%Y%m%d%H%i%s'), '%d/%m/%Y %H:%i') AS DATA_BIGLIETTO,
       DATE_FORMAT(STR_TO_DATE(B.DATA_ACQUISTO, '%Y%m%d%H%i%s'), '%d/%m/%Y %H:%i:%s') AS DATA_ACQUISTO,
       T.KID AS ID_TRENO,
       T.MODELLO AS MODELLO_TRENO,
       T.NUMERO_POSTI AS NUMERO_POSTI_TRENO,
       T.ANNO_FABBRICAZIONE AS ANNO_FABBRICAZIONE_TRENO,
       WPTC.ID_PERCORSO_TARIFFA_CLASSE,
	   WPTC.ID_PERCORSO,
	   WPTC.PERCORSO,
       WPTC.ID_TARIFFA,
       WPTC.TARIFFA,
       WPTC.ID_CLASSE,
       WPTC.CLASSE,
	   WPTC.IMPORTO
FROM BIGLIETTI B
INNER JOIN passeggeri P ON P.KID = B.ID_PASSEGGERO
INNER JOIN treni T ON T.KID = B.ID_TRENO
INNER JOIN W_PERCORSI_TARIFFE_CLASSE WPTC ON WPTC.ID_PERCORSO_TARIFFA_CLASSE = B.ID_PERCORSO_TARIFFA_CLASSE
WHERE B.DATA_CANCELLAZIONE IS NULL;

/**Percorsi tariffe classe con tutte le informazioni del percorso, tariffa e classe*/
SELECT ID_PERCORSO_TARIFFA_CLASSE,
	   ID_PERCORSO,
	   PERCORSO,
       ID_TARIFFA,
       TARIFFA,
       ETA_MAX_TARIFFA,
       ETA_MIN_TARIFFA,
       ID_CLASSE,
       CLASSE,
	   IMPORTO
FROM W_PERCORSI_TARIFFE_CLASSE;

/**Percorsi con le tratte/stazioni dei viaggi*/
SELECT P.KID AS ID_PERCORSO,
	   P.DESCRIZIONE AS PERCORSO,
       T.DISTANZA_KM,
       T.DURATA_PREVISTA_MIN,
       SDA.KID AS ID_STAZIONE_DA,
       SA.KID AS ID_STAZIONE_A,
       SDA.DESCRIZIONE AS STAZIONE_DA,
       SA.DESCRIZIONE AS STAZIONE_A,
       CDA.KID AS ID_CITTA_DA,
       CA.KID AS ID_CITTA_A,
       CDA.DESCRIZIONE AS CITTA_DA,
       CA.DESCRIZIONE AS CITTA_A
FROM PERCORSI P
INNER JOIN PERCORSO_TRATTE PT ON PT.ID_PERCORSO = P.KID
INNER JOIN TRATTE T ON T.KID = PT.ID_TRATTA
INNER JOIN STAZIONI SDA ON SDA.KID = T.ID_STAZIONE_DA
INNER JOIN CITTA CDA ON CDA.KID = SDA.ID_CITTA
INNER JOIN STAZIONI SA ON SA.KID = T.ID_STAZIONE_A
INNER JOIN CITTA CA ON CA.KID = SA.ID_CITTA
ORDER BY P.DESCRIZIONE, PT.ORDINE;

/**Storico dei biglietti */
SELECT BJN.KID,
	   B.KID AS ID_BIGLIETTO,
	   DATE_FORMAT(STR_TO_DATE(BJN.DATA_OPERAZIONE, '%Y%m%d%H%i%s'), '%d/%m/%Y %H:%i:%s') AS DATA_OPERAZIONE,
       TOP.KID AS ID_TIPO_OPERAZIONE,
	   TOP.DESCRIZIONE AS  TIPO_OPERAZIONE
FROM BIGLIETTI B
INNER JOIN BIGLIETTI_JN BJN ON BJN.ID_BIGLIETTO_JN = B.KID
INNER JOIN TIPO_OPERAZIONE TOP ON TOP.KID = BJN.ID_TIPO_OPERAZIONE
WHERE B.DATA_CANCELLAZIONE IS NULL
ORDER BY B.KID;

/**Quanto hanno speso i passeggeri per tutti i biglietti comprati*/
SELECT P.KID AS ID_PASSEGGERO,
       P.NOME,
       P.COGNOME,
       P.CODICE_FISCALE,
       DATE_FORMAT(STR_TO_DATE(P.DATA_NASCITA, '%Y%m%d'), '%d/%m/%Y') AS DATA_NASCITA,
       P.EMAIL,
       CONCAT(SUM(WPTC.IMPORTO),' €') AS IMPORTO_TOTALE
FROM BIGLIETTI B
INNER JOIN passeggeri P ON P.KID = B.ID_PASSEGGERO
INNER JOIN W_PERCORSI_TARIFFE_CLASSE WPTC ON WPTC.ID_PERCORSO_TARIFFA_CLASSE = B.ID_PERCORSO_TARIFFA_CLASSE
WHERE B.DATA_CANCELLAZIONE IS NULL
GROUP BY P.KID,
         P.NOME,
         P.COGNOME,
         P.CODICE_FISCALE,
         P.DATA_NASCITA,
         P.EMAIL;